name: Generate and Publish Allure Report

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Ensures all history is fetched for CI management

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure this matches your project's Node version

    - name: Install dependencies
      run: npm install

    - name: Set Execution Permissions for WDIO
      run: chmod +x node_modules/.bin/wdio

    - name: Run tests
      run: npx wdio run wdio.chrome.conf.js  # Ensure this generates allure-results

    - name: Install Allure Command Line
      run: npm install -g allure-commandline

    - name: Generate Allure Report
      run: allure generate allure-results --clean -o allure-report

    - name: Checkout gh-pages branch in a separate directory
      uses: actions/checkout@v2
      with:
        ref: 'gh-pages'
        path: 'gh-pages'  # Checkout to a separate directory

    - name: Copy Allure Report to gh-pages directory
      run: |
        rm -rf gh-pages/*  # Clear existing contents
        cp -a allure-report/. gh-pages/  # Corrects the path for copying

    - name: Commit and push changes to gh-pages
      working-directory: gh-pages  # Change directory to gh-pages
      run: |
        git config user.email "action@github.com"
        git config user.name "GitHub Actions"
        git add -A
        git commit -m "Deploy Allure Report" -a || echo "No changes to commit"
        git push --force origin gh-pages
